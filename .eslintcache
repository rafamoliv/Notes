[{"E:\\Projetos\\GitHub\\notes\\src\\index.js":"1","E:\\Projetos\\GitHub\\notes\\src\\App.js":"2","E:\\Projetos\\GitHub\\notes\\src\\serviceWorker.js":"3","E:\\Projetos\\GitHub\\notes\\src\\redux\\store.js":"4","E:\\Projetos\\GitHub\\notes\\src\\redux\\notesReducer.js":"5","E:\\Projetos\\GitHub\\notes\\src\\components\\NotesTable.js":"6","E:\\Projetos\\GitHub\\notes\\src\\services\\notes.js":"7","E:\\Projetos\\GitHub\\notes\\src\\components\\NoteModal.js":"8"},{"size":694,"mtime":1611241224211,"results":"9","hashOfConfig":"10"},{"size":477,"mtime":1611254677661,"results":"11","hashOfConfig":"10"},{"size":5141,"mtime":1611237687668,"results":"12","hashOfConfig":"10"},{"size":189,"mtime":1611241977409,"results":"13","hashOfConfig":"10"},{"size":1417,"mtime":1611255535636,"results":"14","hashOfConfig":"10"},{"size":1002,"mtime":1611282633537,"results":"15","hashOfConfig":"10"},{"size":1082,"mtime":1611283062542,"results":"16","hashOfConfig":"10"},{"size":2240,"mtime":1611282733847,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"dvokb1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\Projetos\\GitHub\\notes\\src\\index.js",[],["37","38"],"E:\\Projetos\\GitHub\\notes\\src\\App.js",[],"E:\\Projetos\\GitHub\\notes\\src\\serviceWorker.js",[],"E:\\Projetos\\GitHub\\notes\\src\\redux\\store.js",[],"E:\\Projetos\\GitHub\\notes\\src\\redux\\notesReducer.js",["39","40"],"const initialState = {\r\n  notes: [],\r\n};\r\n\r\nexport const ActionTypes = {\r\n  SET_NOTES: \"SET_NOTES\",\r\n  DELETE_NOTE: \"DELETE_NOTE\",\r\n  NEW_NOTE: \"NEW_NOTE\",\r\n  EDIT_NOTE: \"EDIT_NOTE\",\r\n};\r\n\r\nexport const ActionCreators = {\r\n  setNotes: (payload) => ({ type: ActionTypes.SET_NOTES, payload }),\r\n  deleteNote: (payload) => ({ type: ActionTypes.DELETE_NOTE, payload }),\r\n  newNote: (payload) => ({ type: ActionTypes.NEW_NOTE, payload }),\r\n  editNote: (payload) => ({ type: ActionTypes.EDIT_NOTE, payload }),\r\n};\r\n\r\nexport default function NotesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_NOTES:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload],\r\n      };\r\n\r\n    case ActionTypes.DELETE_NOTE:\r\n      for (let i = 0; i < state.notes.length; i++) {\r\n        if (state.notes[i].id == action.payload.id) {\r\n          state.notes.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n      return { ...state, notes: [...state.notes] };\r\n\r\n    case ActionTypes.NEW_NOTE:\r\n      return { ...state, notes: [...state.notes, action.payload] };\r\n\r\n    case ActionTypes.EDIT_NOTE:\r\n      for (let i = 0; i < state.notes.length; i++) {\r\n        if (state.notes[i].id == action.payload.id) {\r\n          state.notes[i].value = action.payload.value;\r\n        }\r\n      }\r\n      return { ...state, notes: [...state.notes] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Projetos\\GitHub\\notes\\src\\components\\NotesTable.js",["41"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DeleteNote, GetNotes } from \"../services/notes\";\r\nimport { EditNoteModal } from \"./NoteModal\";\r\n\r\nexport const NotesTable = () => {\r\n  const notes = useSelector((state) => state.notesReducer.notes);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    GetNotes(dispatch);\r\n  }, []);\r\n\r\n  return (\r\n    <table className=\"table table-dark\">\r\n      <tbody>\r\n        {notes.map((n) => (\r\n          <tr>\r\n            <td style={{ width: \"3rem\" }}>\r\n              <EditNoteModal note={n} />\r\n            </td>\r\n            <td style={{ width: \"3rem\" }}>\r\n              <Button className=\"btn btn-danger\" onClick={() => DeleteNote(dispatch, n)}>\r\n                Delete\r\n              </Button>\r\n            </td>\r\n            <td style={{ textAlign: \"left\" }}>{n.value}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","E:\\Projetos\\GitHub\\notes\\src\\services\\notes.js",[],"E:\\Projetos\\GitHub\\notes\\src\\components\\NoteModal.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":29,"column":31,"nodeType":"48","messageId":"49","endLine":29,"endColumn":33},{"ruleId":"46","severity":1,"message":"47","line":41,"column":31,"nodeType":"48","messageId":"49","endLine":41,"endColumn":33},{"ruleId":"50","severity":1,"message":"51","line":13,"column":6,"nodeType":"52","endLine":13,"endColumn":8,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [dispatch]",{"range":"59","text":"60"},[440,442],"[dispatch]"]